---
- name: Install coredns
  when: ansible_facts['os_family'] == "Archlinux"
  command: yay -S coredns-bin --noconfirm
  args:
    warn: no

- include: install-coredns-on-ubuntu.yml
  when: ansible_facts['os_family'] == "Debian"

- name: Create zones directory
  become: yes
  file:
    owner: coredns
    group: coredns
    path: /etc/coredns/zones
    state: directory

- name: set custom zone file for gugger.cloud
  become: yes
  copy:
    mode: 0644
    owner: coredns
    group: coredns
    force: yes
    dest: /etc/coredns/zones/gugger.cloud.zone
    content: |
      $ORIGIN gugger.cloud.
      $TTL 86400
      @	IN	SOA	ns1.gugger.cloud.	hostmaster.gugger.cloud. (
          2021052301 ; serial
          21600      ; refresh after 6 hours
          3600       ; retry after 1 hour
          604800     ; expire after 1 week
          86400 )    ; minimum TTL of 1 day
      ;
      ;
        IN	NS	ns1.gugger.cloud.
        IN	NS	ns2.gugger.cloud.
      ns1	IN	A	20.199.182.92
      ns2	IN	A	20.199.182.92

      manuel IN A 20.199.182.92
      www    IN A 20.199.182.92

- name: set custom zone file for .k8s
  become: yes
  copy:
    mode: 0644
    owner: coredns
    group: coredns
    force: yes
    dest: /etc/coredns/zones/k8s.zone
    content: |
      $ORIGIN k8s.
      @	3600 IN	SOA sns.dns.icann.org. noc.dns.icann.org. 2017042745 7200 3600 1209600 3600
        3600 IN NS a.iana-servers.net.
        3600 IN NS b.iana-servers.net.

      *         IN  A     10.0.235.70;

- name: Copy configuration file
  become: yes
  copy:
    mode: 0644
    owner: coredns
    group: coredns
    force: yes
    dest: /etc/coredns/Corefile
    content: |  
      . {
        health
        acl {
          allow net 192.168.0.0/16 10.0.0.0/8 172.16.0.0/12 127.0.0.1
          block
        }
        prometheus 0.0.0.0:9153

        hosts /etc/hosts {
          fallthrough
          reload "12h"
        }

        forward . tls://9.9.9.9 {
          tls_servername dns.quad9.net
          health_check 30s
        }
        cache 3600
      }

      gugger.cloud. {
        file /etc/coredns/zones/gugger.cloud.zone
        prometheus 0.0.0.0:9153
        log
      }

      home. {
        acl {
          allow net 192.168.0.0/16 10.0.0.0/8 172.16.0.0/12 127.0.0.1
          block
        }
        prometheus 0.0.0.0:9153

        forward . {{ hostvars[inventory_hostname].tags.wireguard_ip.split("/")[0] }}:8600
      }

      k8s. {
        acl {
          allow net 192.168.0.0/16 10.0.0.0/8 172.16.0.0/12 127.0.0.1
          block
        }
        prometheus 0.0.0.0:9153

        file /etc/coredns/zones/k8s.zone
      }

      azure.com {
        acl {
          allow net 192.168.0.0/16 10.0.0.0/8 172.16.0.0/12 127.0.0.1
          block
        }
        prometheus 0.0.0.0:9153

        forward . 168.63.129.16
      }

      windows.net {
        acl {
          allow net 192.168.0.0/16 10.0.0.0/8 172.16.0.0/12 127.0.0.1
          block
        }
        prometheus 0.0.0.0:9153

        forward . 168.63.129.16
      }

- name: firewalld allow coredns udp
  become: yes
  tags: [ firewall ]
  ansible.posix.firewalld:
    permanent: yes
    state: enabled
    zone: public
    port: 53/udp
    immediate: yes

- name: firewalld allow coredns tcp
  become: yes
  tags: [ firewall ]
  ansible.posix.firewalld:
    permanent: yes
    state: enabled
    zone: public
    port: 53/tcp
    immediate: yes

- name: firewalld allow coredns metrics tcp ports
  become: yes
  tags: [ firewall ]
  ansible.posix.firewalld:
    permanent: yes
    state: enabled
    zone: internal
    port: 9153/tcp
    immediate: yes

- name: set coredns systemd timer service
  become: yes
  copy:
    mode: 0644
    owner: root
    group: root
    force: yes
    dest: /etc/systemd/system/coredns.timer
    content: |
      [Unit]
      Description=Start coredns 1 mins after boot

      [Timer]
      OnBootSec=1min

      [Install]
      WantedBy=timers.target

- name: Create a directory if it does not exist
  become: yes
  ansible.builtin.file:
    path: /etc/systemd/system/coredns.service.d
    state: directory
    owner: root
    group: root

- name: create coredns system service drop-in
  become: yes
  copy:
    force: yes
    mode: 0644
    owner: root
    group: root
    dest: /etc/systemd/system/coredns.service.d/drop-in.conf
    content: |
      [Service]
      MemoryMax=40M
      Nice=-15

- name: Make sure coredns is running
  become: yes
  ansible.builtin.systemd:
    state: restarted
    name: coredns.timer
    enabled: yes

- name: Copy nameserver for systemd-resolved
  become: yes
  copy:
    force: yes
    mode: 0644
    dest: /etc/systemd/resolved.conf
    content: |
      [Resolve]
      DNSStubListener=no
      DNS=127.0.0.1 9.9.9.9 1.1.1.1
      Domains=~.

- name: Make sure systemd-resolved is restarted
  become: yes
  ansible.builtin.systemd:
    state: restarted
    name: systemd-resolved
    enabled: yes

- name: Create symbolic link 
  become: yes
  file:
    force: yes
    src: /run/systemd/resolve/stub-resolv.conf
    dest: /etc/resolv.conf
    state: link

- name: create coredns service for consul
  become: yes
  copy:
    force: yes
    owner: consul
    group: consul
    dest: /etc/consul.d/coredns.json
    content: |
      {
        "service":
          {
            "id": "coredns",
            "name": "coredns",
            "port": 9153,
            "address":"",
            "checks": [
              {
                "id": "coredns-health",
                "name": "coredns health check",
                "http": "http://localhost:8080/health",
                "method": "GET",
                "interval": "30s"
              }
            ]
          }
      }

- name: reload consul
  ignore_errors: true
  command: consul reload