# ---
# - name: Install k3s-bin
#   command: yay -S k3s-bin --noconfirm
#   args:
#     warn: no

- name: Set hostname to "{{ inventory_hostname }}"
  become: yes
  command: hostnamectl set-hostname {{ inventory_hostname }}

- name: Create a directory if it does not exist
  become: yes
  ansible.builtin.file:
    path: /etc/systemd/system/k3s.service.d
    state: directory
    owner: root
    group: root
    mode: '0644'

- name: edit k3s systemd service for server
  become: yes
  when: hostvars[inventory_hostname]['tags']['k3s-role'] == "server"
  copy:
    mode: 0644
    owner: root
    group: root
    force: yes
    dest: /etc/systemd/system/k3s.service.d/network.conf
    content: |
      [Service]
      ExecStart=
      ExecStart=/usr/bin/k3s server --token {{ k3s_token }} --advertise-address {{ hostvars[inventory_hostname]['tags']['wireguard_ip'] }} --flannel-iface=wg0 --node-taint node-role.kubernetes.io/master=true:NoSchedule

- name: edit k3s systemd service for agent
  become: yes
  when: hostvars[inventory_hostname]['tags']['k3s-role'] == "agent"
  copy:
    mode: 0644
    owner: root
    group: root
    force: yes
    dest: /etc/systemd/system/k3s.service.d/network.conf
    content: |
      [Service]
      ExecStart=
      ExecStart=/usr/bin/k3s agent --server {{ k3s_server_url }} --token {{ k3s_token }} --flannel-iface=wg0

- name: ufw allow k3s 6443
  become: yes
  ufw:
    rule: allow
    interface: wg0
    direction: in
    port: 6443
    proto: tcp

- name: ufw allow k3s 8472
  become: yes
  ufw:
    rule: allow
    interface: wg0
    port: 8472
    direction: in
    proto: udp

- name: ufw allow k3s 10250
  become: yes
  ufw:
    rule: allow
    interface: wg0
    port: 10250
    direction: in
    proto: tcp

- name: ufw allow k3s ha for embedded etc 2379-2380
  become: yes
  ufw:
    rule: allow
    interface: wg0
    port: 2379:2380
    direction: in
    proto: tcp

- name: Reload service k3s
  ansible.builtin.systemd:
    name: k3s.service
    no_block: yes
    daemon_reload: yes
    state: restarted